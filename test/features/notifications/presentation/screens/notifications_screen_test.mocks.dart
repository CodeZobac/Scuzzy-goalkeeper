// Mocks generated by Mockito 5.4.6 from annotations
// in goalkeeper/test/features/notifications/presentation/screens/notifications_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i10;

import 'package:flutter/material.dart' as _i9;
import 'package:goalkeeper/src/features/notifications/data/models/notification.dart'
    as _i3;
import 'package:goalkeeper/src/features/notifications/data/models/notification_category.dart'
    as _i7;
import 'package:goalkeeper/src/features/notifications/presentation/controllers/notification_badge_controller.dart'
    as _i6;
import 'package:goalkeeper/src/features/notifications/presentation/controllers/notification_controller.dart'
    as _i2;
import 'package:goalkeeper/src/features/notifications/services/full_lobby_detection_service.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NotificationController].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationController extends _i1.Mock
    implements _i2.NotificationController {
  MockNotificationController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.AppNotification> get notifications => (super.noSuchMethod(
        Invocation.getter(#notifications),
        returnValue: <_i3.AppNotification>[],
      ) as List<_i3.AppNotification>);

  @override
  int get unreadCount => (super.noSuchMethod(
        Invocation.getter(#unreadCount),
        returnValue: 0,
      ) as int);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isRealtimeConnected => (super.noSuchMethod(
        Invocation.getter(#isRealtimeConnected),
        returnValue: false,
      ) as bool);

  @override
  bool get hasMoreNotifications => (super.noSuchMethod(
        Invocation.getter(#hasMoreNotifications),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoadingMore => (super.noSuchMethod(
        Invocation.getter(#isLoadingMore),
        returnValue: false,
      ) as bool);

  @override
  int get currentPage => (super.noSuchMethod(
        Invocation.getter(#currentPage),
        returnValue: 0,
      ) as int);

  @override
  int get totalNotifications => (super.noSuchMethod(
        Invocation.getter(#totalNotifications),
        returnValue: 0,
      ) as int);

  @override
  String get searchQuery => (super.noSuchMethod(
        Invocation.getter(#searchQuery),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#searchQuery),
        ),
      ) as String);

  @override
  bool get showArchived => (super.noSuchMethod(
        Invocation.getter(#showArchived),
        returnValue: false,
      ) as bool);

  @override
  String get sortBy => (super.noSuchMethod(
        Invocation.getter(#sortBy),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#sortBy),
        ),
      ) as String);

  @override
  bool get sortAscending => (super.noSuchMethod(
        Invocation.getter(#sortAscending),
        returnValue: false,
      ) as bool);

  @override
  Set<String> get selectedNotificationIds => (super.noSuchMethod(
        Invocation.getter(#selectedNotificationIds),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  bool get selectionMode => (super.noSuchMethod(
        Invocation.getter(#selectionMode),
        returnValue: false,
      ) as bool);

  @override
  bool get hasSelectedNotifications => (super.noSuchMethod(
        Invocation.getter(#hasSelectedNotifications),
        returnValue: false,
      ) as bool);

  @override
  List<_i3.AppNotification> get selectedNotifications => (super.noSuchMethod(
        Invocation.getter(#selectedNotifications),
        returnValue: <_i3.AppNotification>[],
      ) as List<_i3.AppNotification>);

  @override
  bool get hasUnreadNotifications => (super.noSuchMethod(
        Invocation.getter(#hasUnreadNotifications),
        returnValue: false,
      ) as bool);

  @override
  List<_i3.AppNotification> get unreadNotifications => (super.noSuchMethod(
        Invocation.getter(#unreadNotifications),
        returnValue: <_i3.AppNotification>[],
      ) as List<_i3.AppNotification>);

  @override
  set onNotificationTapped(
          dynamic Function(Map<String, dynamic>)? _onNotificationTapped) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotificationTapped,
          _onNotificationTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> initialize(
    String? userId, {
    _i6.NotificationBadgeController? badgeController,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [userId],
          {#badgeController: badgeController},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> loadNotifications(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #loadNotifications,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> refreshNotifications(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #refreshNotifications,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> loadNotificationsPaginated(
    String? userId, {
    bool? reset = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadNotificationsPaginated,
          [userId],
          {#reset: reset},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> loadMoreNotifications(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #loadMoreNotifications,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> searchNotifications(
    String? userId,
    String? query,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchNotifications,
          [
            userId,
            query,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearSearch(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearSearch,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> filterByCategory(
    String? userId,
    _i7.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> toggleArchivedView(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #toggleArchivedView,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> loadNotificationsAdvanced(
    String? userId, {
    bool? reset = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadNotificationsAdvanced,
          [userId],
          {#reset: reset},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setSorting(
    String? userId,
    String? sortBy,
    bool? ascending,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSorting,
          [
            userId,
            sortBy,
            ascending,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setDateRange(
    String? userId,
    DateTime? from,
    DateTime? to,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDateRange,
          [
            userId,
            from,
            to,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearDateRange(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearDateRange,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setReadStatusFilter(
    String? userId,
    bool? readStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReadStatusFilter,
          [
            userId,
            readStatus,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearAllFilters(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearAllFilters,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  Map<String, dynamic> getPaginationInfo() => (super.noSuchMethod(
        Invocation.method(
          #getPaginationInfo,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i5.Future<void> markAsRead(String? notificationId) => (super.noSuchMethod(
        Invocation.method(
          #markAsRead,
          [notificationId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> markAllAsRead(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #markAllAsRead,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> markAllAsReadByCategory(
    String? userId,
    _i7.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAllAsReadByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  int getUnreadCountByCategory(_i7.NotificationCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadCountByCategory,
          [category],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i5.Future<void> markAsReadOnView(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsReadOnView,
          [notificationId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> archiveOldNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveOldNotifications,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteNotification(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [notificationId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteNotifications(List<String>? notificationIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotifications,
          [notificationIds],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteAllNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllNotifications,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteNotificationsByCategory(
    String? userId,
    _i7.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotificationsByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.AppNotification>> getArchivedNotifications({
    int? limit = 20,
    int? offset = 0,
    String? searchQuery,
    _i7.NotificationCategory? category,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedNotifications,
          [],
          {
            #limit: limit,
            #offset: offset,
            #searchQuery: searchQuery,
            #category: category,
          },
        ),
        returnValue: _i5.Future<List<_i3.AppNotification>>.value(
            <_i3.AppNotification>[]),
      ) as _i5.Future<List<_i3.AppNotification>>);

  @override
  _i5.Future<void> cleanupArchivedNotifications({int? olderThanDays = 90}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cleanupArchivedNotifications,
          [],
          {#olderThanDays: olderThanDays},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> restoreArchivedNotification(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreArchivedNotification,
          [notificationId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void handleNotificationTap(Map<String, dynamic>? data) => super.noSuchMethod(
        Invocation.method(
          #handleNotificationTap,
          [data],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleNotificationReceived(Map<String, dynamic>? data) =>
      super.noSuchMethod(
        Invocation.method(
          #handleNotificationReceived,
          [data],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<List<_i3.AppNotification>> getBookingNotifications(
          String? bookingId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookingNotifications,
          [bookingId],
        ),
        returnValue: _i5.Future<List<_i3.AppNotification>>.value(
            <_i3.AppNotification>[]),
      ) as _i5.Future<List<_i3.AppNotification>>);

  @override
  _i5.Future<bool> areNotificationsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #areNotificationsEnabled,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  Map<String, dynamic> getRealtimeStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getRealtimeStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i5.Future<void> reconnectRealtime() => (super.noSuchMethod(
        Invocation.method(
          #reconnectRealtime,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void resetRealtimeStatistics() => super.noSuchMethod(
        Invocation.method(
          #resetRealtimeStatistics,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getFullLobbyStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getFullLobbyStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i5.Future<void> checkAnnouncementFullLobby(int? announcementId) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAnnouncementFullLobby,
          [announcementId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  bool isAnnouncementProcessed(int? announcementId) => (super.noSuchMethod(
        Invocation.method(
          #isAnnouncementProcessed,
          [announcementId],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i8.AnnouncementStatus? getAnnouncementStatus(int? announcementId) =>
      (super.noSuchMethod(Invocation.method(
        #getAnnouncementStatus,
        [announcementId],
      )) as _i8.AnnouncementStatus?);

  @override
  bool isActionLoading(String? notificationId) => (super.noSuchMethod(
        Invocation.method(
          #isActionLoading,
          [notificationId],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<bool> handleContractAccept(
    _i9.BuildContext? context,
    _i3.AppNotification? notification,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleContractAccept,
          [
            context,
            notification,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> handleContractDecline(
    _i9.BuildContext? context,
    _i3.AppNotification? notification,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleContractDecline,
          [
            context,
            notification,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> navigateToContractDetails(
    _i9.BuildContext? context,
    _i3.AppNotification? notification,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToContractDetails,
          [
            context,
            notification,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> navigateToAnnouncementDetails(
    _i9.BuildContext? context,
    _i3.AppNotification? notification,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToAnnouncementDetails,
          [
            context,
            notification,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> handleNotificationNavigation(
    _i9.BuildContext? context,
    _i3.AppNotification? notification,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleNotificationNavigation,
          [
            context,
            notification,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  Map<String, dynamic> getArchivingStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getArchivingStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i5.Future<void> manualArchiveOldNotifications() => (super.noSuchMethod(
        Invocation.method(
          #manualArchiveOldNotifications,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void toggleSelectionMode() => super.noSuchMethod(
        Invocation.method(
          #toggleSelectionMode,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleNotificationSelection(String? notificationId) =>
      super.noSuchMethod(
        Invocation.method(
          #toggleNotificationSelection,
          [notificationId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void selectAllNotifications() => super.noSuchMethod(
        Invocation.method(
          #selectAllNotifications,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearSelection() => super.noSuchMethod(
        Invocation.method(
          #clearSelection,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isNotificationSelected(String? notificationId) => (super.noSuchMethod(
        Invocation.method(
          #isNotificationSelected,
          [notificationId],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> markSelectedAsRead() => (super.noSuchMethod(
        Invocation.method(
          #markSelectedAsRead,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteSelectedNotifications() => (super.noSuchMethod(
        Invocation.method(
          #deleteSelectedNotifications,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> archiveSelectedNotifications() => (super.noSuchMethod(
        Invocation.method(
          #archiveSelectedNotifications,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
