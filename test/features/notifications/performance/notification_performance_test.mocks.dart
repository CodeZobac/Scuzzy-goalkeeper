// Mocks generated by Mockito 5.4.6 from annotations
// in goalkeeper/test/features/notifications/performance/notification_performance_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i10;

import 'package:goalkeeper/src/features/notifications/data/models/contract_notification_data.dart'
    as _i7;
import 'package:goalkeeper/src/features/notifications/data/models/full_lobby_notification_data.dart'
    as _i8;
import 'package:goalkeeper/src/features/notifications/data/models/notification.dart'
    as _i5;
import 'package:goalkeeper/src/features/notifications/data/models/notification_category.dart'
    as _i6;
import 'package:goalkeeper/src/features/notifications/data/models/notification_error.dart'
    as _i2;
import 'package:goalkeeper/src/features/notifications/data/repositories/notification_repository.dart'
    as _i3;
import 'package:goalkeeper/src/features/notifications/services/notification_service.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNotificationResult_0<T> extends _i1.SmartFake
    implements _i2.NotificationResult<T> {
  _FakeNotificationResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NotificationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationRepository extends _i1.Mock
    implements _i3.NotificationRepository {
  MockNotificationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.AppNotification>> getUserNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotifications,
          [userId],
        ),
        returnValue: _i4.Future<List<_i5.AppNotification>>.value(
            <_i5.AppNotification>[]),
      ) as _i4.Future<List<_i5.AppNotification>>);

  @override
  _i4.Future<List<_i5.AppNotification>> getUserNotificationsPaginated(
    String? userId, {
    int? limit = 20,
    int? offset = 0,
    String? searchQuery,
    _i6.NotificationCategory? category,
    bool? includeArchived = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotificationsPaginated,
          [userId],
          {
            #limit: limit,
            #offset: offset,
            #searchQuery: searchQuery,
            #category: category,
            #includeArchived: includeArchived,
          },
        ),
        returnValue: _i4.Future<List<_i5.AppNotification>>.value(
            <_i5.AppNotification>[]),
      ) as _i4.Future<List<_i5.AppNotification>>);

  @override
  _i4.Future<int> getUserNotificationsCount(
    String? userId, {
    String? searchQuery,
    _i6.NotificationCategory? category,
    bool? includeArchived = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotificationsCount,
          [userId],
          {
            #searchQuery: searchQuery,
            #category: category,
            #includeArchived: includeArchived,
          },
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> getUnreadNotificationsCount(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadNotificationsCount,
          [userId],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> markNotificationAsRead(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markNotificationAsRead,
          [notificationId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> markAllNotificationsAsRead(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAllNotificationsAsRead,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> markAllNotificationsAsReadByCategory(
    String? userId,
    _i6.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAllNotificationsAsReadByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getUnreadNotificationsCountByCategory(
    String? userId,
    _i6.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadNotificationsCountByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> archiveOldNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveOldNotifications,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.AppNotification>> getUserNotificationsNonArchived(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotificationsNonArchived,
          [userId],
        ),
        returnValue: _i4.Future<List<_i5.AppNotification>>.value(
            <_i5.AppNotification>[]),
      ) as _i4.Future<List<_i5.AppNotification>>);

  @override
  _i4.Future<void> markNotificationAsReadOnView(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markNotificationAsReadOnView,
          [notificationId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteNotification(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [notificationId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.AppNotification>> getBookingNotifications(
          String? bookingId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookingNotifications,
          [bookingId],
        ),
        returnValue: _i4.Future<List<_i5.AppNotification>>.value(
            <_i5.AppNotification>[]),
      ) as _i4.Future<List<_i5.AppNotification>>);

  @override
  _i4.Stream<_i5.AppNotification> listenToUserNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenToUserNotifications,
          [userId],
        ),
        returnValue: _i4.Stream<_i5.AppNotification>.empty(),
      ) as _i4.Stream<_i5.AppNotification>);

  @override
  _i4.Stream<List<_i5.AppNotification>> getNotificationsStream(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationsStream,
          [userId],
        ),
        returnValue: _i4.Stream<List<_i5.AppNotification>>.empty(),
      ) as _i4.Stream<List<_i5.AppNotification>>);

  @override
  _i4.Stream<int> getUnreadCountStream(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUnreadCountStream,
          [userId],
        ),
        returnValue: _i4.Stream<int>.empty(),
      ) as _i4.Stream<int>);

  @override
  _i4.Future<void> saveFCMToken({
    required String? userId,
    required String? token,
    String? deviceId,
    required String? platform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFCMToken,
          [],
          {
            #userId: userId,
            #token: token,
            #deviceId: deviceId,
            #platform: platform,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disableFCMToken(
    String? userId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #disableFCMToken,
          [
            userId,
            token,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<String>> getUserFCMTokens(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserFCMTokens,
          [userId],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<void> createContractNotification({
    required String? goalkeeperUserId,
    required String? contractorUserId,
    required String? announcementId,
    required _i7.ContractNotificationData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createContractNotification,
          [],
          {
            #goalkeeperUserId: goalkeeperUserId,
            #contractorUserId: contractorUserId,
            #announcementId: announcementId,
            #data: data,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> createFullLobbyNotification({
    required String? creatorUserId,
    required String? announcementId,
    required _i8.FullLobbyNotificationData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFullLobbyNotification,
          [],
          {
            #creatorUserId: creatorUserId,
            #announcementId: announcementId,
            #data: data,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> handleContractResponse({
    required String? notificationId,
    required String? contractId,
    required bool? accepted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleContractResponse,
          [],
          {
            #notificationId: notificationId,
            #contractId: contractId,
            #accepted: accepted,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.AppNotification>> getNotificationsByCategory(
    String? userId,
    _i6.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationsByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i4.Future<List<_i5.AppNotification>>.value(
            <_i5.AppNotification>[]),
      ) as _i4.Future<List<_i5.AppNotification>>);

  @override
  _i4.Future<List<_i5.AppNotification>> getNotificationsAdvanced(
    String? userId, {
    int? limit = 20,
    int? offset = 0,
    String? searchQuery,
    _i6.NotificationCategory? category,
    bool? includeArchived = false,
    String? sortBy = 'sent_at',
    bool? ascending = false,
    DateTime? dateFrom,
    DateTime? dateTo,
    bool? readStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationsAdvanced,
          [userId],
          {
            #limit: limit,
            #offset: offset,
            #searchQuery: searchQuery,
            #category: category,
            #includeArchived: includeArchived,
            #sortBy: sortBy,
            #ascending: ascending,
            #dateFrom: dateFrom,
            #dateTo: dateTo,
            #readStatus: readStatus,
          },
        ),
        returnValue: _i4.Future<List<_i5.AppNotification>>.value(
            <_i5.AppNotification>[]),
      ) as _i4.Future<List<_i5.AppNotification>>);

  @override
  _i4.Future<int> getNotificationsCountAdvanced(
    String? userId, {
    String? searchQuery,
    _i6.NotificationCategory? category,
    bool? includeArchived = false,
    DateTime? dateFrom,
    DateTime? dateTo,
    bool? readStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationsCountAdvanced,
          [userId],
          {
            #searchQuery: searchQuery,
            #category: category,
            #includeArchived: includeArchived,
            #dateFrom: dateFrom,
            #dateTo: dateTo,
            #readStatus: readStatus,
          },
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Stream<List<_i5.AppNotification>> watchNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNotifications,
          [userId],
        ),
        returnValue: _i4.Stream<List<_i5.AppNotification>>.empty(),
      ) as _i4.Stream<List<_i5.AppNotification>>);

  @override
  _i4.Future<void> deleteNotifications(List<String>? notificationIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotifications,
          [notificationIds],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAllNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllNotifications,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteNotificationsByCategory(
    String? userId,
    _i6.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotificationsByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.AppNotification>> getArchivedNotifications(
    String? userId, {
    int? limit = 20,
    int? offset = 0,
    String? searchQuery,
    _i6.NotificationCategory? category,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedNotifications,
          [userId],
          {
            #limit: limit,
            #offset: offset,
            #searchQuery: searchQuery,
            #category: category,
          },
        ),
        returnValue: _i4.Future<List<_i5.AppNotification>>.value(
            <_i5.AppNotification>[]),
      ) as _i4.Future<List<_i5.AppNotification>>);

  @override
  _i4.Future<void> cleanupArchivedNotifications(
    String? userId, {
    int? olderThanDays = 90,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cleanupArchivedNotifications,
          [userId],
          {#olderThanDays: olderThanDays},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> restoreArchivedNotification(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreArchivedNotification,
          [notificationId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i9.NotificationService {
  MockNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onNotificationTapped(
          dynamic Function(Map<String, dynamic>)? _onNotificationTapped) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotificationTapped,
          _onNotificationTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onNotificationReceived(
          dynamic Function(Map<String, dynamic>)? _onNotificationReceived) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotificationReceived,
          _onNotificationReceived,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onError(dynamic Function(_i2.NotificationError)? _onError) =>
      super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i2.NotificationResult<void>> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<_i2.NotificationResult<void>>.value(
            _FakeNotificationResult_0<void>(
          this,
          Invocation.method(
            #initialize,
            [],
          ),
        )),
      ) as _i4.Future<_i2.NotificationResult<void>>);

  @override
  _i4.Future<void> onUserSignIn() => (super.noSuchMethod(
        Invocation.method(
          #onUserSignIn,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.NotificationResult<void>> sendContractNotification({
    required String? goalkeeperUserId,
    required _i7.ContractNotificationData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendContractNotification,
          [],
          {
            #goalkeeperUserId: goalkeeperUserId,
            #data: data,
          },
        ),
        returnValue: _i4.Future<_i2.NotificationResult<void>>.value(
            _FakeNotificationResult_0<void>(
          this,
          Invocation.method(
            #sendContractNotification,
            [],
            {
              #goalkeeperUserId: goalkeeperUserId,
              #data: data,
            },
          ),
        )),
      ) as _i4.Future<_i2.NotificationResult<void>>);

  @override
  _i4.Future<void> sendFullLobbyNotification({
    required String? creatorUserId,
    required _i8.FullLobbyNotificationData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFullLobbyNotification,
          [],
          {
            #creatorUserId: creatorUserId,
            #data: data,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  Map<String, dynamic>? parseNotificationData(Map<String, dynamic>? data) =>
      (super.noSuchMethod(Invocation.method(
        #parseNotificationData,
        [data],
      )) as Map<String, dynamic>?);

  @override
  _i4.Future<bool> areNotificationsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #areNotificationsEnabled,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> disableToken() => (super.noSuchMethod(
        Invocation.method(
          #disableToken,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
