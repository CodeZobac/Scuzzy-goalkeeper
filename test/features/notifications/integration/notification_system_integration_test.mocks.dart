// Mocks generated by Mockito 5.4.6 from annotations
// in goalkeeper/test/features/notifications/integration/notification_system_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i10;

import 'package:goalkeeper/src/features/notifications/data/models/contract_notification_data.dart'
    as _i8;
import 'package:goalkeeper/src/features/notifications/data/models/full_lobby_notification_data.dart'
    as _i9;
import 'package:goalkeeper/src/features/notifications/data/models/notification.dart'
    as _i12;
import 'package:goalkeeper/src/features/notifications/data/models/notification_category.dart'
    as _i13;
import 'package:goalkeeper/src/features/notifications/data/models/notification_error.dart'
    as _i3;
import 'package:goalkeeper/src/features/notifications/data/repositories/notification_repository.dart'
    as _i11;
import 'package:goalkeeper/src/features/notifications/services/notification_realtime_service.dart'
    as _i14;
import 'package:goalkeeper/src/features/notifications/services/notification_service.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:realtime_client/src/constants.dart' as _i16;
import 'package:realtime_client/src/push.dart' as _i4;
import 'package:realtime_client/src/types.dart' as _i15;
import 'package:supabase/supabase.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFunctionsClient_0 extends _i1.SmartFake
    implements _i2.FunctionsClient {
  _FakeFunctionsClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseStorageClient_1 extends _i1.SmartFake
    implements _i2.SupabaseStorageClient {
  _FakeSupabaseStorageClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeClient_2 extends _i1.SmartFake
    implements _i2.RealtimeClient {
  _FakeRealtimeClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestClient_3 extends _i1.SmartFake
    implements _i2.PostgrestClient {
  _FakePostgrestClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueClient_4 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQueryBuilder_5 extends _i1.SmartFake
    implements _i2.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQuerySchema_6 extends _i1.SmartFake
    implements _i2.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_7<T1> extends _i1.SmartFake
    implements _i2.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_8 extends _i1.SmartFake
    implements _i2.RealtimeChannel {
  _FakeRealtimeChannel_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationResult_9<T> extends _i1.SmartFake
    implements _i3.NotificationResult<T> {
  _FakeNotificationResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePush_10 extends _i1.SmartFake implements _i4.Push {
  _FakePush_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimePresence_11 extends _i1.SmartFake
    implements _i2.RealtimePresence {
  _FakeRealtimePresence_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i2.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FunctionsClient get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctionsClient_0(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i2.FunctionsClient);

  @override
  _i2.SupabaseStorageClient get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSupabaseStorageClient_1(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.SupabaseStorageClient);

  @override
  _i2.RealtimeClient get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtimeClient_2(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i2.RealtimeClient);

  @override
  _i2.PostgrestClient get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.getter(#rest),
        ),
      ) as _i2.PostgrestClient);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i2.GoTrueClient get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeGoTrueClient_4(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i2.GoTrueClient);

  @override
  set functions(_i2.FunctionsClient? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set storage(_i2.SupabaseStorageClient? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set realtime(_i2.RealtimeClient? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set rest(_i2.PostgrestClient? _rest) => super.noSuchMethod(
        Invocation.setter(
          #rest,
          _rest,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          headers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakeSupabaseQueryBuilder_5(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i2.SupabaseQueryBuilder);

  @override
  _i2.SupabaseQuerySchema schema(String? schema) => (super.noSuchMethod(
        Invocation.method(
          #schema,
          [schema],
        ),
        returnValue: _FakeSupabaseQuerySchema_6(
          this,
          Invocation.method(
            #schema,
            [schema],
          ),
        ),
      ) as _i2.SupabaseQuerySchema);

  @override
  _i2.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {
            #params: params,
            #get: get,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {
              #params: params,
              #get: get,
            },
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.RealtimeChannel channel(
    String? name, {
    _i2.RealtimeChannelConfig? opts = const _i2.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [name],
          {#opts: opts},
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  List<_i2.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i2.RealtimeChannel>[],
      ) as List<_i2.RealtimeChannel>);

  @override
  _i5.Future<String> removeChannel(_i2.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #removeChannel,
            [channel],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i7.NotificationService {
  MockNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onNotificationTapped(
          dynamic Function(Map<String, dynamic>)? _onNotificationTapped) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotificationTapped,
          _onNotificationTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onNotificationReceived(
          dynamic Function(Map<String, dynamic>)? _onNotificationReceived) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotificationReceived,
          _onNotificationReceived,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onError(dynamic Function(_i3.NotificationError)? _onError) =>
      super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<_i3.NotificationResult<void>> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<_i3.NotificationResult<void>>.value(
            _FakeNotificationResult_9<void>(
          this,
          Invocation.method(
            #initialize,
            [],
          ),
        )),
      ) as _i5.Future<_i3.NotificationResult<void>>);

  @override
  _i5.Future<void> onUserSignIn() => (super.noSuchMethod(
        Invocation.method(
          #onUserSignIn,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.NotificationResult<void>> sendContractNotification({
    required String? goalkeeperUserId,
    required _i8.ContractNotificationData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendContractNotification,
          [],
          {
            #goalkeeperUserId: goalkeeperUserId,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i3.NotificationResult<void>>.value(
            _FakeNotificationResult_9<void>(
          this,
          Invocation.method(
            #sendContractNotification,
            [],
            {
              #goalkeeperUserId: goalkeeperUserId,
              #data: data,
            },
          ),
        )),
      ) as _i5.Future<_i3.NotificationResult<void>>);

  @override
  _i5.Future<void> sendFullLobbyNotification({
    required String? creatorUserId,
    required _i9.FullLobbyNotificationData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFullLobbyNotification,
          [],
          {
            #creatorUserId: creatorUserId,
            #data: data,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  Map<String, dynamic>? parseNotificationData(Map<String, dynamic>? data) =>
      (super.noSuchMethod(Invocation.method(
        #parseNotificationData,
        [data],
      )) as Map<String, dynamic>?);

  @override
  _i5.Future<bool> areNotificationsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #areNotificationsEnabled,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> disableToken() => (super.noSuchMethod(
        Invocation.method(
          #disableToken,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NotificationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationRepository extends _i1.Mock
    implements _i11.NotificationRepository {
  MockNotificationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i12.AppNotification>> getUserNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotifications,
          [userId],
        ),
        returnValue: _i5.Future<List<_i12.AppNotification>>.value(
            <_i12.AppNotification>[]),
      ) as _i5.Future<List<_i12.AppNotification>>);

  @override
  _i5.Future<List<_i12.AppNotification>> getUserNotificationsPaginated(
    String? userId, {
    int? limit = 20,
    int? offset = 0,
    String? searchQuery,
    _i13.NotificationCategory? category,
    bool? includeArchived = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotificationsPaginated,
          [userId],
          {
            #limit: limit,
            #offset: offset,
            #searchQuery: searchQuery,
            #category: category,
            #includeArchived: includeArchived,
          },
        ),
        returnValue: _i5.Future<List<_i12.AppNotification>>.value(
            <_i12.AppNotification>[]),
      ) as _i5.Future<List<_i12.AppNotification>>);

  @override
  _i5.Future<int> getUserNotificationsCount(
    String? userId, {
    String? searchQuery,
    _i13.NotificationCategory? category,
    bool? includeArchived = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotificationsCount,
          [userId],
          {
            #searchQuery: searchQuery,
            #category: category,
            #includeArchived: includeArchived,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> getUnreadNotificationsCount(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadNotificationsCount,
          [userId],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> markNotificationAsRead(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markNotificationAsRead,
          [notificationId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> markAllNotificationsAsRead(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAllNotificationsAsRead,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> markAllNotificationsAsReadByCategory(
    String? userId,
    _i13.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAllNotificationsAsReadByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> getUnreadNotificationsCountByCategory(
    String? userId,
    _i13.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadNotificationsCountByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> archiveOldNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveOldNotifications,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i12.AppNotification>> getUserNotificationsNonArchived(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotificationsNonArchived,
          [userId],
        ),
        returnValue: _i5.Future<List<_i12.AppNotification>>.value(
            <_i12.AppNotification>[]),
      ) as _i5.Future<List<_i12.AppNotification>>);

  @override
  _i5.Future<void> markNotificationAsReadOnView(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markNotificationAsReadOnView,
          [notificationId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteNotification(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [notificationId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i12.AppNotification>> getBookingNotifications(
          String? bookingId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookingNotifications,
          [bookingId],
        ),
        returnValue: _i5.Future<List<_i12.AppNotification>>.value(
            <_i12.AppNotification>[]),
      ) as _i5.Future<List<_i12.AppNotification>>);

  @override
  _i5.Stream<_i12.AppNotification> listenToUserNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenToUserNotifications,
          [userId],
        ),
        returnValue: _i5.Stream<_i12.AppNotification>.empty(),
      ) as _i5.Stream<_i12.AppNotification>);

  @override
  _i5.Stream<List<_i12.AppNotification>> getNotificationsStream(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationsStream,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i12.AppNotification>>.empty(),
      ) as _i5.Stream<List<_i12.AppNotification>>);

  @override
  _i5.Stream<int> getUnreadCountStream(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUnreadCountStream,
          [userId],
        ),
        returnValue: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);

  @override
  _i5.Future<void> saveFCMToken({
    required String? userId,
    required String? token,
    String? deviceId,
    required String? platform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFCMToken,
          [],
          {
            #userId: userId,
            #token: token,
            #deviceId: deviceId,
            #platform: platform,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> disableFCMToken(
    String? userId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #disableFCMToken,
          [
            userId,
            token,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<String>> getUserFCMTokens(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserFCMTokens,
          [userId],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<void> createContractNotification({
    required String? goalkeeperUserId,
    required String? contractorUserId,
    required String? announcementId,
    required _i8.ContractNotificationData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createContractNotification,
          [],
          {
            #goalkeeperUserId: goalkeeperUserId,
            #contractorUserId: contractorUserId,
            #announcementId: announcementId,
            #data: data,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createFullLobbyNotification({
    required String? creatorUserId,
    required String? announcementId,
    required _i9.FullLobbyNotificationData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFullLobbyNotification,
          [],
          {
            #creatorUserId: creatorUserId,
            #announcementId: announcementId,
            #data: data,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> handleContractResponse({
    required String? notificationId,
    required String? contractId,
    required bool? accepted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleContractResponse,
          [],
          {
            #notificationId: notificationId,
            #contractId: contractId,
            #accepted: accepted,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i12.AppNotification>> getNotificationsByCategory(
    String? userId,
    _i13.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationsByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i5.Future<List<_i12.AppNotification>>.value(
            <_i12.AppNotification>[]),
      ) as _i5.Future<List<_i12.AppNotification>>);

  @override
  _i5.Future<List<_i12.AppNotification>> getNotificationsAdvanced(
    String? userId, {
    int? limit = 20,
    int? offset = 0,
    String? searchQuery,
    _i13.NotificationCategory? category,
    bool? includeArchived = false,
    String? sortBy = 'sent_at',
    bool? ascending = false,
    DateTime? dateFrom,
    DateTime? dateTo,
    bool? readStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationsAdvanced,
          [userId],
          {
            #limit: limit,
            #offset: offset,
            #searchQuery: searchQuery,
            #category: category,
            #includeArchived: includeArchived,
            #sortBy: sortBy,
            #ascending: ascending,
            #dateFrom: dateFrom,
            #dateTo: dateTo,
            #readStatus: readStatus,
          },
        ),
        returnValue: _i5.Future<List<_i12.AppNotification>>.value(
            <_i12.AppNotification>[]),
      ) as _i5.Future<List<_i12.AppNotification>>);

  @override
  _i5.Future<int> getNotificationsCountAdvanced(
    String? userId, {
    String? searchQuery,
    _i13.NotificationCategory? category,
    bool? includeArchived = false,
    DateTime? dateFrom,
    DateTime? dateTo,
    bool? readStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationsCountAdvanced,
          [userId],
          {
            #searchQuery: searchQuery,
            #category: category,
            #includeArchived: includeArchived,
            #dateFrom: dateFrom,
            #dateTo: dateTo,
            #readStatus: readStatus,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Stream<List<_i12.AppNotification>> watchNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNotifications,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i12.AppNotification>>.empty(),
      ) as _i5.Stream<List<_i12.AppNotification>>);

  @override
  _i5.Future<void> deleteNotifications(List<String>? notificationIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotifications,
          [notificationIds],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteAllNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllNotifications,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteNotificationsByCategory(
    String? userId,
    _i13.NotificationCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotificationsByCategory,
          [
            userId,
            category,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i12.AppNotification>> getArchivedNotifications(
    String? userId, {
    int? limit = 20,
    int? offset = 0,
    String? searchQuery,
    _i13.NotificationCategory? category,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedNotifications,
          [userId],
          {
            #limit: limit,
            #offset: offset,
            #searchQuery: searchQuery,
            #category: category,
          },
        ),
        returnValue: _i5.Future<List<_i12.AppNotification>>.value(
            <_i12.AppNotification>[]),
      ) as _i5.Future<List<_i12.AppNotification>>);

  @override
  _i5.Future<void> cleanupArchivedNotifications(
    String? userId, {
    int? olderThanDays = 90,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cleanupArchivedNotifications,
          [userId],
          {#olderThanDays: olderThanDays},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> restoreArchivedNotification(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreArchivedNotification,
          [notificationId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [NotificationRealtimeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationRealtimeService extends _i1.Mock
    implements _i14.NotificationRealtimeService {
  MockNotificationRealtimeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  int get notificationsReceived => (super.noSuchMethod(
        Invocation.getter(#notificationsReceived),
        returnValue: 0,
      ) as int);

  @override
  int get notificationsUpdated => (super.noSuchMethod(
        Invocation.getter(#notificationsUpdated),
        returnValue: 0,
      ) as int);

  @override
  set onNotificationInserted(
          dynamic Function(_i12.AppNotification)? _onNotificationInserted) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotificationInserted,
          _onNotificationInserted,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onNotificationUpdated(
          dynamic Function(_i12.AppNotification)? _onNotificationUpdated) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotificationUpdated,
          _onNotificationUpdated,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onNotificationDeleted(dynamic Function(String)? _onNotificationDeleted) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotificationDeleted,
          _onNotificationDeleted,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onUnreadCountChanged(dynamic Function(int)? _onUnreadCountChanged) =>
      super.noSuchMethod(
        Invocation.setter(
          #onUnreadCountChanged,
          _onUnreadCountChanged,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onConnectionStateChanged(
          dynamic Function(bool)? _onConnectionStateChanged) =>
      super.noSuchMethod(
        Invocation.setter(
          #onConnectionStateChanged,
          _onConnectionStateChanged,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> initialize(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> reconnect() => (super.noSuchMethod(
        Invocation.method(
          #reconnect,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  Map<String, dynamic> getStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  void resetStatistics() => super.noSuchMethod(
        Invocation.method(
          #resetStatistics,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RealtimeChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockRealtimeChannel extends _i1.Mock implements _i2.RealtimeChannel {
  MockRealtimeChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get joinedOnce => (super.noSuchMethod(
        Invocation.getter(#joinedOnce),
        returnValue: false,
      ) as bool);

  @override
  _i4.Push get joinPush => (super.noSuchMethod(
        Invocation.getter(#joinPush),
        returnValue: _FakePush_10(
          this,
          Invocation.getter(#joinPush),
        ),
      ) as _i4.Push);

  @override
  _i2.RealtimePresence get presence => (super.noSuchMethod(
        Invocation.getter(#presence),
        returnValue: _FakeRealtimePresence_11(
          this,
          Invocation.getter(#presence),
        ),
      ) as _i2.RealtimePresence);

  @override
  String get broadcastEndpointURL => (super.noSuchMethod(
        Invocation.getter(#broadcastEndpointURL),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#broadcastEndpointURL),
        ),
      ) as String);

  @override
  String get subTopic => (super.noSuchMethod(
        Invocation.getter(#subTopic),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#subTopic),
        ),
      ) as String);

  @override
  String get topic => (super.noSuchMethod(
        Invocation.getter(#topic),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#topic),
        ),
      ) as String);

  @override
  Map<String, dynamic> get params => (super.noSuchMethod(
        Invocation.getter(#params),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i2.RealtimeClient get socket => (super.noSuchMethod(
        Invocation.getter(#socket),
        returnValue: _FakeRealtimeClient_2(
          this,
          Invocation.getter(#socket),
        ),
      ) as _i2.RealtimeClient);

  @override
  bool get canPush => (super.noSuchMethod(
        Invocation.getter(#canPush),
        returnValue: false,
      ) as bool);

  @override
  String get joinRef => (super.noSuchMethod(
        Invocation.getter(#joinRef),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#joinRef),
        ),
      ) as String);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get isErrored => (super.noSuchMethod(
        Invocation.getter(#isErrored),
        returnValue: false,
      ) as bool);

  @override
  bool get isJoined => (super.noSuchMethod(
        Invocation.getter(#isJoined),
        returnValue: false,
      ) as bool);

  @override
  bool get isJoining => (super.noSuchMethod(
        Invocation.getter(#isJoining),
        returnValue: false,
      ) as bool);

  @override
  bool get isLeaving => (super.noSuchMethod(
        Invocation.getter(#isLeaving),
        returnValue: false,
      ) as bool);

  @override
  set joinedOnce(bool? _joinedOnce) => super.noSuchMethod(
        Invocation.setter(
          #joinedOnce,
          _joinedOnce,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set joinPush(_i4.Push? _joinPush) => super.noSuchMethod(
        Invocation.setter(
          #joinPush,
          _joinPush,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set presence(_i2.RealtimePresence? _presence) => super.noSuchMethod(
        Invocation.setter(
          #presence,
          _presence,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set broadcastEndpointURL(String? _broadcastEndpointURL) => super.noSuchMethod(
        Invocation.setter(
          #broadcastEndpointURL,
          _broadcastEndpointURL,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set params(Map<String, dynamic>? _params) => super.noSuchMethod(
        Invocation.setter(
          #params,
          _params,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rejoinUntilConnected() => super.noSuchMethod(
        Invocation.method(
          #rejoinUntilConnected,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RealtimeChannel subscribe([
    void Function(
      _i2.RealtimeSubscribeStatus,
      Object?,
    )? callback,
    Duration? timeout,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [
            callback,
            timeout,
          ],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #subscribe,
            [
              callback,
              timeout,
            ],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  List<_i2.SinglePresenceState> presenceState() => (super.noSuchMethod(
        Invocation.method(
          #presenceState,
          [],
        ),
        returnValue: <_i2.SinglePresenceState>[],
      ) as List<_i2.SinglePresenceState>);

  @override
  _i5.Future<_i2.ChannelResponse> track(
    Map<String, dynamic>? payload, [
    Map<String, dynamic>? opts = const {},
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #track,
          [
            payload,
            opts,
          ],
        ),
        returnValue:
            _i5.Future<_i2.ChannelResponse>.value(_i2.ChannelResponse.ok),
      ) as _i5.Future<_i2.ChannelResponse>);

  @override
  _i5.Future<_i2.ChannelResponse> untrack(
          [Map<String, dynamic>? opts = const {}]) =>
      (super.noSuchMethod(
        Invocation.method(
          #untrack,
          [opts],
        ),
        returnValue:
            _i5.Future<_i2.ChannelResponse>.value(_i2.ChannelResponse.ok),
      ) as _i5.Future<_i2.ChannelResponse>);

  @override
  _i2.RealtimeChannel onPostgresChanges({
    required _i2.PostgresChangeEvent? event,
    String? schema,
    String? table,
    _i2.PostgresChangeFilter? filter,
    required void Function(_i2.PostgresChangePayload)? callback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #onPostgresChanges,
          [],
          {
            #event: event,
            #schema: schema,
            #table: table,
            #filter: filter,
            #callback: callback,
          },
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onPostgresChanges,
            [],
            {
              #event: event,
              #schema: schema,
              #table: table,
              #filter: filter,
              #callback: callback,
            },
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onBroadcast({
    required String? event,
    required void Function(Map<String, dynamic>)? callback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #onBroadcast,
          [],
          {
            #event: event,
            #callback: callback,
          },
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onBroadcast,
            [],
            {
              #event: event,
              #callback: callback,
            },
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onPresenceSync(
          void Function(_i2.RealtimePresenceSyncPayload)? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #onPresenceSync,
          [callback],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onPresenceSync,
            [callback],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onPresenceJoin(
          void Function(_i2.RealtimePresenceJoinPayload)? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #onPresenceJoin,
          [callback],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onPresenceJoin,
            [callback],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onPresenceLeave(
          void Function(_i2.RealtimePresenceLeavePayload)? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #onPresenceLeave,
          [callback],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onPresenceLeave,
            [callback],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onSystemEvents(void Function(dynamic)? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #onSystemEvents,
          [callback],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onSystemEvents,
            [callback],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onEvents(
    String? type,
    _i15.ChannelFilter? filter,
    _i2.BindingCallback? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onEvents,
          [
            type,
            filter,
            callback,
          ],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onEvents,
            [
              type,
              filter,
              callback,
            ],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel off(
    String? type,
    Map<String, String>? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #off,
          [
            type,
            filter,
          ],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #off,
            [
              type,
              filter,
            ],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i4.Push push(
    _i16.ChannelEvents? event,
    Map<String, dynamic>? payload, [
    Duration? timeout,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #push,
          [
            event,
            payload,
            timeout,
          ],
        ),
        returnValue: _FakePush_10(
          this,
          Invocation.method(
            #push,
            [
              event,
              payload,
              timeout,
            ],
          ),
        ),
      ) as _i4.Push);

  @override
  _i5.Future<_i2.ChannelResponse> sendBroadcastMessage({
    required String? event,
    required Map<String, dynamic>? payload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendBroadcastMessage,
          [],
          {
            #event: event,
            #payload: payload,
          },
        ),
        returnValue:
            _i5.Future<_i2.ChannelResponse>.value(_i2.ChannelResponse.ok),
      ) as _i5.Future<_i2.ChannelResponse>);

  @override
  _i5.Future<_i2.ChannelResponse> send({
    required _i15.RealtimeListenTypes? type,
    String? event,
    required Map<String, dynamic>? payload,
    Map<String, dynamic>? opts = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [],
          {
            #type: type,
            #event: event,
            #payload: payload,
            #opts: opts,
          },
        ),
        returnValue:
            _i5.Future<_i2.ChannelResponse>.value(_i2.ChannelResponse.ok),
      ) as _i5.Future<_i2.ChannelResponse>);

  @override
  void updateJoinPayload(Map<String, dynamic>? payload) => super.noSuchMethod(
        Invocation.method(
          #updateJoinPayload,
          [payload],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<String> unsubscribe([Duration? timeout]) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [timeout],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #unsubscribe,
            [timeout],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  dynamic onMessage(
    String? event,
    dynamic payload, [
    String? ref,
  ]) =>
      super.noSuchMethod(Invocation.method(
        #onMessage,
        [
          event,
          payload,
          ref,
        ],
      ));

  @override
  bool isMember(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #isMember,
          [topic],
        ),
        returnValue: false,
      ) as bool);

  @override
  void rejoin([Duration? timeout]) => super.noSuchMethod(
        Invocation.method(
          #rejoin,
          [timeout],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void forceRejoin([Duration? timeout]) => super.noSuchMethod(
        Invocation.method(
          #forceRejoin,
          [timeout],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void trigger(
    String? type, [
    dynamic payload,
    String? ref,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #trigger,
          [
            type,
            payload,
            ref,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String replyEventName(String? ref) => (super.noSuchMethod(
        Invocation.method(
          #replyEventName,
          [ref],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #replyEventName,
            [ref],
          ),
        ),
      ) as String);
}
