// Mocks generated by Mockito 5.4.6 from annotations
// in goalkeeper/test/features/announcements/presentation/controllers/announcement_controller_enhanced_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:goalkeeper/src/features/announcements/data/models/announcement.dart'
    as _i2;
import 'package:goalkeeper/src/features/announcements/data/repositories/announcement_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAnnouncement_0 extends _i1.SmartFake implements _i2.Announcement {
  _FakeAnnouncement_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AnnouncementRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnnouncementRepository extends _i1.Mock
    implements _i3.AnnouncementRepository {
  MockAnnouncementRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Announcement>> getAnnouncements() => (super.noSuchMethod(
        Invocation.method(
          #getAnnouncements,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.Announcement>>.value(<_i2.Announcement>[]),
      ) as _i4.Future<List<_i2.Announcement>>);

  @override
  _i4.Future<void> createAnnouncement(_i2.Announcement? announcement) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAnnouncement,
          [announcement],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> joinAnnouncement(
    int? announcementId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinAnnouncement,
          [
            announcementId,
            userId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> leaveAnnouncement(
    int? announcementId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #leaveAnnouncement,
          [
            announcementId,
            userId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<String>> getAnnouncementParticipants(int? announcementId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAnnouncementParticipants,
          [announcementId],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<_i2.Announcement> getAnnouncementById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAnnouncementById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Announcement>.value(_FakeAnnouncement_0(
          this,
          Invocation.method(
            #getAnnouncementById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Announcement>);

  @override
  _i4.Future<List<_i2.AnnouncementParticipant>> getParticipants(
          int? announcementId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getParticipants,
          [announcementId],
        ),
        returnValue: _i4.Future<List<_i2.AnnouncementParticipant>>.value(
            <_i2.AnnouncementParticipant>[]),
      ) as _i4.Future<List<_i2.AnnouncementParticipant>>);

  @override
  _i4.Future<bool> isUserParticipant(
    int? announcementId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isUserParticipant,
          [
            announcementId,
            userId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>> getOrganizerInfo(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrganizerInfo,
          [userId],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> getStadiumInfo(String? stadiumName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStadiumInfo,
          [stadiumName],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}
