# Nginx Configuration for Python Email Service
# This configuration sets up reverse proxy and HTTPS termination

# Rate limiting configuration
limit_req_zone $binary_remote_addr zone=email_api:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=health_check:10m rate=30r/m;

# Upstream backend configuration
upstream email_service_backend {
    server 127.0.0.1:8000;
    # Add more servers here for load balancing if needed
    # server 127.0.0.1:8001;
    
    # Health check configuration (requires nginx-plus or custom module)
    # health_check;
}

# HTTP server - redirects to HTTPS
server {
    listen 80;
    server_name your-domain.com;  # Replace with your actual domain
    
    # Allow Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }
    
    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server - main configuration
server {
    listen 443 ssl http2;
    server_name your-domain.com;  # Replace with your actual domain
    
    # SSL Configuration (will be managed by certbot)
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Logging
    access_log /var/log/nginx/email-service.access.log;
    error_log /var/log/nginx/email-service.error.log warn;
    
    # Client configuration
    client_max_body_size 1M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Health check endpoint (no rate limiting for monitoring)
    location = /health {
        limit_req zone=health_check burst=10 nodelay;
        
        proxy_pass http://email_service_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        access_log off;  # Don't log health checks
    }
    
    # API endpoints with rate limiting
    location /api/ {
        limit_req zone=email_api burst=5 nodelay;
        
        proxy_pass http://email_service_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Handle errors
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }
    
    # OpenAPI documentation (no rate limiting for docs)
    location ~ ^/(docs|redoc|openapi.json)$ {
        proxy_pass http://email_service_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Root endpoint
    location = / {
        proxy_pass http://email_service_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Error pages
    location = /50x.html {
        root /var/www/html;
        internal;
    }
    
    # Block common attack patterns
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
